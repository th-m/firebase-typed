/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Transaction as LiteTransaction } from '../../../lite/src/api/transaction';
import { DocumentSnapshot } from './snapshot';
import { FirebaseFirestore } from './database';
import { Transaction as InternalTransaction } from '../../../src/core/transaction';
import { DocumentReference } from '../../../lite/src/api/reference';
export declare class Transaction extends LiteTransaction {
    protected readonly _firestore: FirebaseFirestore;
    constructor(_firestore: FirebaseFirestore, _transaction: InternalTransaction);
    get<T>(documentRef: DocumentReference<T>): Promise<DocumentSnapshot<T>>;
}
export declare function runTransaction<T>(firestore: FirebaseFirestore, updateFunction: (transaction: Transaction) => Promise<T>): Promise<T>;
